/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buzzworks;

import java.awt.Color;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Scanner;

/**
 *
 * @author Simon Junga (simonthechipmunk)
 */
public class DialogBuzzerEmulation extends javax.swing.JFrame {

    private Serial serial;
    private serialReceiver serialreceiver;
    private boolean buzzed;
    
    public PipedInputStream pipein;
    public PipedOutputStream pipeout;
    
    /**
     * Creates new form DialogBuzzerEmulation
     */
    public DialogBuzzerEmulation(Serial serial) throws Exception{
        this.serial = serial;
        
        pipein = new PipedInputStream();
        pipeout = new PipedOutputStream();
        
        //connect streams
        try{
            ((PipedOutputStream)serial.out).connect(pipein);
            ((PipedInputStream)serial.in).connect(pipeout);
        }
        catch(Exception e){
            throw e;
        }
        
        //set window title
        this.setTitle("Buzzworks - Emulation");
        
        //init window components
        initComponents();
        
        //start serial message watcher
        serialreceiver = new serialReceiver(this);
        new Thread(serialreceiver).start();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_31 = new javax.swing.JButton();
        jButton_32 = new javax.swing.JButton();
        jButton_33 = new javax.swing.JButton();
        jButton_34 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_31.setText("31: Buzzer Team A");
        jButton_31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_31ActionPerformed(evt);
            }
        });

        jButton_32.setText("32: Buzzer Team B");
        jButton_32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_32ActionPerformed(evt);
            }
        });

        jButton_33.setText("33: Buzzer Team C");
        jButton_33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_33ActionPerformed(evt);
            }
        });

        jButton_34.setText("34: Buzzer Team D");
        jButton_34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_34ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton_31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton_32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
            .addComponent(jButton_33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
            .addComponent(jButton_34, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton_31, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_32, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_33, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_34, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_31ActionPerformed
        // TODO add your handling code here:
        if(!buzzed){
            buzzed = true;
            jButton_31.setSelected(true);
            this.Send("31:is.buzzed\n");
        }
        
        
    }//GEN-LAST:event_jButton_31ActionPerformed

    private void jButton_32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_32ActionPerformed
        // TODO add your handling code here:
        if(!buzzed){
            buzzed = true;
            jButton_32.setSelected(true);
            this.Send("32:is.buzzed\n");
        }
    }//GEN-LAST:event_jButton_32ActionPerformed

    private void jButton_33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_33ActionPerformed
        // TODO add your handling code here:
        if(!buzzed){
            buzzed = true;
            jButton_33.setSelected(true);
            this.Send("33:is.buzzed\n");
        }
    }//GEN-LAST:event_jButton_33ActionPerformed

    private void jButton_34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_34ActionPerformed
        // TODO add your handling code here:
        if(!buzzed){
            buzzed = true;
            jButton_34.setSelected(true);
            this.Send("34:is.buzzed\n");
        }
    }//GEN-LAST:event_jButton_34ActionPerformed

    //handle "message received" event
    private void receiveHandler(String address, String action, String value) {

        
        if (action.equals("tcolor")) {
            
            if(address.equals("31") || address.equals("all")) {
                jButton_31.setForeground(new Color(Integer.parseInt(value)));
                jButton_31.setBackground(jButton_31.getForeground().darker().darker());
            }
            if(address.equals("32") || address.equals("all")) {
                jButton_32.setForeground(new Color(Integer.parseInt(value)));
                jButton_32.setBackground(jButton_32.getForeground().darker().darker());
            }
            if(address.equals("33") || address.equals("all")) {
                jButton_33.setForeground(new Color(Integer.parseInt(value)));
                jButton_33.setBackground(jButton_33.getForeground().darker().darker());
            }
            if(address.equals("34") || address.equals("all")) {
                jButton_34.setForeground(new Color(Integer.parseInt(value)));
                jButton_34.setBackground(jButton_34.getForeground().darker().darker());
            }
        }
        else if (action.equals("lock")) {
            
            if(address.equals("31") || address.equals("all")) {
                jButton_31.setEnabled(0 == Integer.parseInt(value));
            }
            if(address.equals("32") || address.equals("all")) {
                jButton_32.setEnabled(0 == Integer.parseInt(value));
            }
            if(address.equals("33") || address.equals("all")) {
                jButton_33.setEnabled(0 == Integer.parseInt(value));
            }
            if(address.equals("34") || address.equals("all")) {
                jButton_34.setEnabled(0 == Integer.parseInt(value));
            }
        }
        else if (action.equals("active")) {
            
            if(address.equals("31") || address.equals("all")) {
                jButton_31.setSelected(1 == Integer.parseInt(value));
            }
            if(address.equals("32") || address.equals("all")) {
                jButton_32.setSelected(1 == Integer.parseInt(value));
            }
            if(address.equals("33") || address.equals("all")) {
                jButton_33.setSelected(1 == Integer.parseInt(value));
            }
            if(address.equals("34") || address.equals("all")) {
                jButton_34.setSelected(1 == Integer.parseInt(value));
            }
        }
        else if (address.equals("all")) {
            
            if(action.equals("get") && value.equals("online")){
                int e=0;
                for(int i=31; i<=34; i++){
                    this.Send(i + ":is.online\n");
                    e++;
                }
                this.Send(e + ":devices.online\n");
            }
            else if(action.equals("buzz") && value.equals("reset")){
                buzzed = false;
                jButton_31.setSelected(false);
                jButton_32.setSelected(false);
                jButton_33.setSelected(false);
                jButton_34.setSelected(false);
            }
        }

        
    }
    
    //thread for listening on emulated serial conenction for messages
    private class serialReceiver implements Runnable {
        
        DialogBuzzerEmulation parent;
        
        public serialReceiver(DialogBuzzerEmulation parent) {
            this.parent = parent;
        }
        
        @Override
        public void run() {
            //background

            Scanner scanner = new Scanner(pipein);
            try {
                
                while (true) {
                    //scan                    
                    String inStr = scanner.nextLine();
                    
                    if (inStr.indexOf(':') != -1) {
                        String address, action, value;
                        
                        
                        address = inStr.substring(0,inStr.indexOf(':'));
                        inStr = inStr.substring(inStr.indexOf(':')+1);
                        action = inStr.substring(0,inStr.indexOf('.'));
                        value = inStr.substring(inStr.indexOf('.')+1);

                        parent.receiveHandler(address, action, value);
                    }
                }                
            } catch (Exception e) {
                
            }
        }
    }
    
    //send message to emulated serial connection
    public void Send(String message){
        try{
         pipeout.write(message.getBytes());
        }
        catch (IOException e){
            
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_31;
    private javax.swing.JButton jButton_32;
    private javax.swing.JButton jButton_33;
    private javax.swing.JButton jButton_34;
    // End of variables declaration//GEN-END:variables
}
